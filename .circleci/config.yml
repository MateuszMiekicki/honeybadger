version: 2.1

executors:
  linux-docker:
    docker:
      - image: 0xd00d2bad/honeybadger_ci:latest

jobs:
  static_analysis:
    executor: linux-docker
    steps:
      - checkout
      - run:
          name: "Configure"
          command: |
            cmake -Bbuild -G Ninja -DCMAKE_BUILD_TYPE=Debug
      - run:
          name: "Build"
          command: |
            cmake --build build
      - run:
          name: "Run test"
          command: |
            ctest --test-dir build --no-compress-output -T Test --output-junit Testing/results.xml --rerun-failed --output-on-failure
      - run:
          name: "Run lcov coverage report generation"
          command: |
            lcov --capture --directory build/src --output-file build/Testing/coverage.info --rc lcov_branch_coverage=1
            lcov --remove build/Testing/coverage.info '/usr/*' --output-file build/Testing/coverage.info --rc lcov_branch_coverage=1 # filter system-files
      - run:
          name: "Run sonar scanner"
          command: |
            sonar-scanner -Dsonar.login=$SONAR_TOKEN
      - store_test_results:
          path: build/Testing
      - store_artifacts:
          path: build/Testing

  build:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    working_directory: ~/honeybadger_ci
    steps:
      - checkout
      - attach_workspace:
          at: ~/honeybadger_ci
      - run:
          name: "Configure"
          command: |
            cmake -Bbuild -G Ninja -DCMAKE_BUILD_TYPE=Release
      - run:
          name: "Build"
          command: |
            cmake --build build
      - persist_to_workspace:
          root: ~/honeybadger_ci
          paths:
            - ./build
  test:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    working_directory: ~/honeybadger_ci
    steps:
      - checkout
      - attach_workspace:
          at: ~/honeybadger_ci
      - run:
          name: "Test"
          command: |
            cd build
            ctest --no-compress-output -T Test --output-junit Testing/results.xml --rerun-failed --output-on-failure
      - store_test_results:
          path: build/Testing
      - store_artifacts:
          path: build/Testing
      - persist_to_workspace:
          root: ~/honeybadger_ci
          paths:
            - build

  delivery:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    working_directory: ~/honeybadger_ci
    steps:
      - attach_workspace:
          at: ~/honeybadger_ci
      - run: |
          ls -la
          cd build
          ls -la

  deploy:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    working_directory: ~/honeybadger_ci
    steps:
      - attach_workspace:
          at: ~/honeybadger_ci
      - run: |
          ls -la
          cd build
          ls -la

workflows:
  ci-cd:
    jobs:
      - static_analysis:
          filters:
            branches:
              ignore:
                - gh-pages
      - build:
          matrix:
            parameters:
              os: [ linux-docker ]
          filters:
              branches:
                ignore:
                  - gh-pages
          requires:
            - static_analysis
      - test:
          matrix:
            parameters:
              os: [ linux-docker ]
          filters:
            branches:
              ignore:
                - gh-pages
          requires:
            - build
      - delivery:
          matrix:
            parameters:
              os: [ linux-docker ]
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy:
          matrix:
            parameters:
              os: [ linux-docker ]
          filters:
            branches:
              only:
                - master
          requires:
            - test